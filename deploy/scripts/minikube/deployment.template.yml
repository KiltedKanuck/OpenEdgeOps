apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${PAS.INSTANCE.NAME}
  labels:
    app: ${PAS.INSTANCE.NAME}
    version: v1
spec:
  selector:
    matchLabels:
      app: ${PAS.INSTANCE.NAME}
      version: v1
  template:
    metadata:
      labels:
        app: ${PAS.INSTANCE.NAME}
        version: v1
    spec:
      volumes:
        - name: deploy-artifacts-dir
          emptyDir: {}
        - name: java-dir
          emptyDir: {}
        - name: license-dir
          secret:
            secretName: progress-122-license
        - name: runtime-config-${PAS.INSTANCE.NAME}
          configMap:
            name: runtime-config-${PAS.INSTANCE.NAME}
        - name: logging-config-${PAS.INSTANCE.NAME}
          configMap:
            name: logging-config-${PAS.INSTANCE.NAME}
      initContainers:
        - image: "${APP.DOCKER.IMAGE.FULLNAME}"
          name: war
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "-c", "cp -r /deploy-staging/artifacts/* /deploy/artifacts"]
          volumeMounts:
            - mountPath: /deploy/artifacts
              name: deploy-artifacts-dir
        - image: "${JDK.DOCKER.IMAGE.FULLNAME}"
          name: copy-java
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "-c", "cp -r ${JDK.DOCKER.IMAGE.JAVA.LOCATION}/* /java"]
          volumeMounts:
            - name: java-dir
              mountPath: /java
      containers:
        - name: ${PAS.INSTANCE.NAME}-container
          image: "${PASOE.DOCKER.IMAGE.FULLNAME}"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "-c", "cp /cfg/progress.cfg /psc/dlc/progress.cfg && sh /deploy/scripts/startServer.sh"]
          volumeMounts:
              - name: deploy-artifacts-dir
                mountPath: /deploy/artifacts
              - name: java-dir
                mountPath: /usr/java
              - name: license-dir
                readOnly: false
                mountPath: /cfg
              - name: runtime-config-${PAS.INSTANCE.NAME}
                mountPath: /deploy/scripts/config
              - name: logging-config-${PAS.INSTANCE.NAME}
                mountPath: /fluentbit-tlr
          env:
          - name: FLUENTBIT_LOGGING
            value: "${FLUENTBIT.LOGGING}"
          - name: INSTANCE_NAME
            value: ${PAS.INSTANCE.NAME}
          - name: APP_NAME
            value: ${APP.NAME}
          ports:
            - name: https
              containerPort: 8811
              protocol: TCP
